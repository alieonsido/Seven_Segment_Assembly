A51 MACRO ASSEMBLER  HW4_ASM_2                                                            12/19/2017 11:09:04 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\HW4_ASM_2.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE HW4_ASM_2.asm SET(SMALL) DEBUG PRINT(.\Listings\HW4_ASM_2.lst) OBJECT(.
                      \Objects\HW4_ASM_2.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ; Spec 1: click SW13 and the segment_LED ++ with non-interrupt.
                       2     ; Sepc 2: click SW13 and the segment_LED ++ with external interrupt.
                       3     
                       4     ; the program is non-interrupt.
                       5     
                       6     ; non-interrupt:
                       7     
                       8     ; ----------------defination
                       9     
  00B3                10     SWITCH EQU P3.3 ;INT1
                      11     
  0093                12     SEGMENT0_ENABLE EQU P1.3 
  0092                13     SEGMENT1_ENABLE EQU P1.2
  0091                14     SEGMENT2_ENABLE EQU P1.1
  0090                15     SEGMENT3_ENABLE EQU P1.0
                      16     
  00A0                17     SEGMENT_A EQU P2.0
  00A1                18     SEGMENT_B EQU P2.1
  00A2                19     SEGMENT_C EQU P2.2
  00A3                20     SEGMENT_D EQU P2.3
  00A4                21     SEGMENT_E EQU P2.4
  00A5                22     SEGMENT_F EQU P2.5
  00A6                23     SEGMENT_G EQU P2.6
  00A7                24     SEGMENT_DOT EQU P2.7
                      25     
  0005                26     DELAYTIME EQU 5
                      27     
                      28     ; ----------------defination
                      29     
                      30     ; Notes:
                      31             ; MOV P2,A let all of P2 be zero.
                      32             ; R0 R1 R2 R3 is used to be set "value".
                      33             ; R4 is FLAG for timer.
                      34             ; R5 is used to save the carry.
                      35             ; R6 is used to be displayer.
                      36             ; R7 is for blink counter 
                      37     ; Notice:You need to stay alert on GPIO's speed, or you will find that the segment will be 
                             confusion.
                      38             ; Timer 0 is used to debounce
                      39             ; Timer 1 is used to lag Segment.
                      40     
                      41     ; Setup.
0000                  42     ORG 0000H
0000 E500             43     MOV A,00H 
0002 F5A0             44     MOV P2,A ;P2 = ""All"" of Port 2 
0004 F590             45     MOV P1,A
0006 0117             46     AJMP Setup
                      47     
                      48     
                      49     ; Interrupt 
0013                  50     ORG 0013H ; Interrupt 1 Address
0013 12004A           51     LCALL Interrupt_event
0016 32               52     RETI
                      53     
0017                  54     Setup:
                      55             ;Number Initial
0017 C2D3             56             CLR RS0
A51 MACRO ASSEMBLER  HW4_ASM_2                                                            12/19/2017 11:09:04 PAGE     2

0019 C2D4             57             CLR RS1
001B 7800             58             MOV R0,#0
001D 7900             59             MOV R1,#0
001F 7A00             60             MOV R2,#0
0021 7B00             61             MOV R3,#0
0023 7C05             62             MOV R4,#DELAYTIME ;for Timer0 5 * 500 micro second is 2500 micro second = 2.5ms. 
                      63                     ;Warning:the Timer is not accurate, it will be effect by other instruction.
0025 7D00             64             MOV R5,#0
0027 7E00             65             MOV R6,#0
0029 7F00             66             MOV R7,#0
002B 75813F           67             MOV sp,#3FH
                      68     
                      69             
                      70             ;timer Initial.
002E 758911           71             MOV tmod,#00010001b  ;setting timer0 and timer 1 in MODE 1, Total range is 16bit.(T
                             H+TL)
                      72             
0031 85138C           73             MOV TH0,0013H  
0034 85888A           74             MOV TL0,0088H
                      75             ;totally is 5000 micro second = 5ms
0037 D28C             76             SETB TR0
                      77     
0039 85008D           78             MOV TH1,00H
003C 85018B           79             MOV TL1,01H
                      80     
                      81     
                      82             ; for Interrupt Initial.
003F D2AF             83             SETB EA
0041 D2AA             84             SETB EX1
0043 D28A             85             SETB IT1 ; for INT1 low edge trigger 
                      86     
0045 12010C           87             LCALL Segment_Update
0048 804C             88             JMP Segment_Loop
                      89     
                      90     ;uncomplete
004A                  91     Interrupt_event:
                      92             
                      93             ;Save data to another memory.
004A 8808             94             MOV 08H,R0
004C 8909             95             MOV 09H,R1
004E 8A0A             96             MOV 0AH,R2
0050 8B0B             97             MOV 0BH,R3
                      98     
0052 750004           99             MOV 00H,#4
0055 750100          100             MOV 01H,#0
0058 750204          101             MOV 02H,#4
005B 750300          102             MOV 03H,#0
                     103     
005E                 104             Interrupt_event_loop:
005E C28C            105                     CLR TR0
                     106     
0060 7C05            107                     MOV R4,#DELAYTIME;
0062 D28C            108                     SETB TR0
                     109     
0064                 110                     Segment_Light_Interrupt:
0064 12010C          111                             LCALL Segment_Update
0067 1200B5          112                             LCALL Time_Checker
006A BC00F7          113                             CJNE R4,#0,Segment_Light_Interrupt
                     114     
006D 7C05            115                             MOV R4,#DELAYTIME ;For next Initial
                     116     
006F                 117                     Segment_Extinguish_Interrupt:
006F 1200A1          118                             LCALL Delay_Time0 ;delay 5ms
0072 EC              119                             MOV A,R4
0073 14              120                             DEC A
0074 FC              121                             MOV R4,A
A51 MACRO ASSEMBLER  HW4_ASM_2                                                            12/19/2017 11:09:04 PAGE     3

0075 BC00F7          122                             CJNE R4,#0,Segment_Extinguish_Interrupt ;5ms * 100 = 500ms
                     123     
0078 EF              124                     MOV A,R7
0079 04              125                     INC A
007A FF              126                     MOV R7,A
007B BF03E0          127                     CJNE R7,#03H,Interrupt_event_loop ;blink three times.
                     128     
007E 7F00            129             MOV R7,#00H ;clear.
0080 7C05            130             MOV R4,#DELAYTIME
0082 C28C            131             CLR TR0
0084 D28C            132             SETB TR0
                     133     
0086 1200AB          134             LCALL Delay_Time1
                     135             ;save data to get back.
0089 D2D3            136             SETB RS0
008B 8800            137             MOV 00H,R0
008D 8901            138             MOV 01H,R1
008F 8A02            139             MOV 02H,R2
0091 8B03            140             MOV 03H,R3
0093 C2D3            141             CLR RS0
                     142     
                     143     
0095 22              144             RET
                     145     
                     146             
                     147     ; for scan every segment loop, and it's main code.
                     148     ; Segment_Chooser include displayer.
0096                 149     Segment_Loop:
0096 12010C          150             LCALL Segment_Update
0099 1200B5          151             LCALL Time_Checker
009C BC00F7          152             CJNE R4,#0000H,Segment_Loop ;C8H = 12*16 + 8 = 200(dec)
009F 8024            153             JMP Segment_Adder
                     154             
                     155     
00A1                 156     Delay_Time0:
                     157             ;The test environment is 12MHZ,so that 1/12 * 12MHZ (this is for machine cycle) = 1
                             MHZ
                     158             ;and, 1/(1M) second =  1 micro second, every 1 micro second will add the Timer once.
                     159     
                     160             ; I want 30 micro second , so we must initial set range.
00A1 D28C            161             SETB TR0 ; set Timer 0 to use.
00A3                 162             Delay_Time0_Working:
00A3 308DFD          163                     JNB TF0,Delay_Time0_Working ; if the time is up, the Timer Flag(TF) will fr
                             om zero to one.
00A6 C28D            164                     CLR TF0;
00A8 C28C            165                     CLR TR0;
00AA 22              166                     RET
                     167     
00AB                 168     Delay_Time1:
00AB D28E            169             SETB TR1 ; set Timer 1 to use.
00AD                 170             Delay_Time1_Working:
00AD 308FFD          171                     JNB TF1,Delay_Time1_Working ; if the time is up, the Timer Flag(TF) will fr
                             om zero to one.
00B0 C28F            172                     CLR TF1;
00B2 C28E            173                     CLR TR1;
00B4 22              174                     RET
                     175     
00B5                 176     Time_Checker:
                     177             ; count for R4 times.
00B5 208D02          178             JB TF0,Time_Up
00B8 800A            179             JMP Time_Not_Up
                     180     
00BA                 181             Time_Up:
00BA EC              182                     MOV A,R4
                     183                     ;LCALL Delay_Time1
00BB 14              184                     DEC A
A51 MACRO ASSEMBLER  HW4_ASM_2                                                            12/19/2017 11:09:04 PAGE     4

00BC FC              185                     MOV R4,A ;decrement R4.
00BD C28D            186                     CLR TF0
00BF C28C            187                     CLR TR0
                     188                     ;LCALL Delay_Time1
00C1 D28C            189                     SETB TR0
00C3 22              190                     RET
                     191             
00C4                 192             Time_Not_Up:
00C4 22              193                     RET
                     194     
                     195     
                     196     ; for the number of every segment.
00C5                 197     Segment_Adder:
                     198     
00C5 E8              199             MOV A,R0
                     200             ;LCALL Delay_Time1
00C6 04              201             INC A
00C7 F8              202             MOV R0,A
00C8 E4              203             CLR A
                     204     
                     205             ;LCALL Delay_Time1
                     206     
00C9 B80A2E          207             CJNE R0,#0AH,Segment_Non_Carry ; because this is a add 1 circuit, we only need to c
                             are the LSB.
00CC 8017            208             JMP Segment_Carry_R0toR1
                     209     
00CE                 210             Segment_Carry:
00CE                 211                     Segment_Carry_R2toR3:
00CE EB              212                             MOV A,R3
00CF 04              213                             INC A
00D0 FB              214                             MOV R3,A
00D1 7A00            215                             MOV R2,#00H
00D3 BB0A1C          216                             CJNE R3,#0AH,Segment_Carry_Complete
00D6 802A            217                             JMP Segment_Clear
                     218     
00D8                 219                     Segment_Carry_R1toR2:
00D8 B90A0A          220                             CJNE R1,#0AH,Segment_Carry_R0toR1
00DB EA              221                             MOV A,R2
00DC 04              222                             INC A
00DD FA              223                             MOV R2,A
00DE 7900            224                             MOV R1,#00H
00E0 BA0A0F          225                             CJNE R2,#0AH,Segment_Carry_Complete
00E3 80E9            226                             JMP Segment_Carry_R2toR3
                     227     
00E5                 228                     Segment_Carry_R0toR1:
00E5 B80A0A          229                             CJNE R0,#0AH,Segment_Carry_Complete
00E8 E9              230                             MOV A,R1
00E9 04              231                             INC A
00EA F9              232                             MOV R1,A
00EB 7800            233                             MOV R0,#00H
00ED B90A02          234                             CJNE R1,#0AH,Segment_Carry_Complete
00F0 80E6            235                             JMP Segment_Carry_R1toR2
                     236     
00F2                 237                     Segment_Carry_Complete:
00F2 C28C            238                             CLR TR0
00F4 D28C            239                             SETB TR0 ; reset for next loop. 
00F6 7C05            240                             MOV R4,#DELAYTIME ; reset for next loop.
00F8 809C            241                             JMP Segment_Loop 
                     242     
00FA                 243             Segment_Non_Carry:
00FA C28C            244                     CLR TR0
00FC D28C            245                     SETB TR0 ; reset for next loop. 
00FE 7C05            246                     MOV R4,#DELAYTIME ; reset for next loop.
0100 8094            247                     JMP Segment_Loop 
                     248             ;Warning: you can't JMP to Segment_Numberdisplayer directly, or you won't ba able t
                             o back Segment_Adder.
A51 MACRO ASSEMBLER  HW4_ASM_2                                                            12/19/2017 11:09:04 PAGE     5

0102                 249             Segment_Clear:
0102 7B00            250                     MOV R3,#0
0104 7A00            251                     MOV R2,#0
0106 7900            252                     MOV R1,#0
0108 7800            253                     MOV R0,#0
010A 808A            254                     JMP Segment_Loop
                     255     
                     256     
                     257     
                     258     
010C                 259     Segment_Update:
                     260     
                     261             ; for choose the segment bit.
010C                 262             Segment_Chooser:
010C                 263                     Segment_Chooser_0:
010C C293            264                             CLR SEGMENT0_ENABLE ; the enable is low state trigger.
010E D292            265                             SETB SEGMENT1_ENABLE
0110 D291            266                             SETB SEGMENT2_ENABLE
0112 D290            267                             SETB SEGMENT3_ENABLE
0114 850006          268                             MOV 06H,00H ; for displayer's check.
0117 120156          269                             LCALL Segment_Numberdisplayer
011A                 270                     Segment_Chooser_1:
011A D293            271                             SETB SEGMENT0_ENABLE ; 0 2 3
011C 120147          272                             LCALL Segment_Privious_Clear ;you need to clean the previous SEGMEN
                             T or you will get the previous status.
011F C292            273                             CLR SEGMENT1_ENABLE 
0121 850106          274                             MOV 06H,01H ; for displayer's check.
0124 120156          275                             LCALL Segment_Numberdisplayer
0127                 276                     Segment_Chooser_2:
0127 D292            277                             SETB SEGMENT1_ENABLE ; 0 1 3
0129 120147          278                             LCALL Segment_Privious_Clear
012C C291            279                             CLR SEGMENT2_ENABLE
012E 850206          280                             MOV 06H,02H ; for displayer's check.
0131 120156          281                             LCALL Segment_Numberdisplayer
0134                 282                     Segment_Chooser_3:
0134 D291            283                             SETB SEGMENT2_ENABLE ; 0 1 2
0136 120147          284                             LCALL Segment_Privious_Clear
0139 C290            285                             CLR SEGMENT3_ENABLE 
013B 850306          286                             MOV 06H,03H ; for displayer's check.
013E 120156          287                             LCALL Segment_Numberdisplayer 
0141 D290            288                             SETB SEGMENT3_ENABLE ; It must be clear itself. 0 1 2 3
0143 120147          289                             LCALL Segment_Privious_Clear
0146 22              290                     RET ;pop the stack, and you can back the main code.
                     291     
0147                 292             Segment_Privious_Clear:
0147 D2A0            293                     SETB SEGMENT_A
0149 D2A1            294                     SETB SEGMENT_B
014B D2A2            295                     SETB SEGMENT_C
014D D2A3            296                     SETB SEGMENT_D
014F D2A4            297                     SETB SEGMENT_E
0151 D2A5            298                     SETB SEGMENT_F
0153 D2A6            299                     SETB SEGMENT_G
0155 22              300                     RET
                     301                     
                     302             ; for number display and replace the position of Array.
0156                 303             Segment_Numberdisplayer:
                     304     
0156                 305                     Segment_Numberdisplayer_0:
                     306                     ;segment 0
0156 BE0013          307                             CJNE R6,#0,Segment_Numberdisplayer_1
0159 C2A0            308                             CLR SEGMENT_A
015B C2A1            309                             CLR SEGMENT_B
015D C2A2            310                             CLR SEGMENT_C
015F C2A3            311                             CLR SEGMENT_D
0161 C2A4            312                             CLR SEGMENT_E
0163 C2A5            313                             CLR SEGMENT_F
A51 MACRO ASSEMBLER  HW4_ASM_2                                                            12/19/2017 11:09:04 PAGE     6

0165 D2A6            314                             SETB SEGMENT_G
0167 D2A7            315                             SETB SEGMENT_DOT
0169 7E00            316                             MOV R6,#0
016B 22              317                             RET  ;when display complete, you need to back to choose next one wh
                             ich need to display. 
                     318                     
016C                 319                     Segment_Numberdisplayer_1:
                     320                     ;segment 1
016C BE0113          321                             CJNE R6,#1,Segment_Numberdisplayer_2
016F C2A1            322                             CLR SEGMENT_B
0171 C2A2            323                             CLR SEGMENT_C
                     324     
0173 D2A0            325                             SETB SEGMENT_A
0175 D2A3            326                             SETB SEGMENT_D
0177 D2A4            327                             SETB SEGMENT_E
0179 D2A5            328                             SETB SEGMENT_F
017B D2A6            329                             SETB SEGMENT_G
017D D2A7            330                             SETB SEGMENT_DOT
017F 7E00            331                             MOV R6,#0
0181 22              332                             RET 
                     333     
0182                 334                     Segment_Numberdisplayer_2:
                     335                     ;segment 2
0182 BE0213          336                             CJNE R6,#2,Segment_Numberdisplayer_3
0185 C2A0            337                             CLR SEGMENT_A
0187 C2A1            338                             CLR SEGMENT_B
0189 D2A2            339                             SETB SEGMENT_C
018B C2A3            340                             CLR SEGMENT_D
018D C2A4            341                             CLR SEGMENT_E
018F D2A5            342                             SETB SEGMENT_F
0191 C2A6            343                             CLR SEGMENT_G
0193 D2A7            344                             SETB SEGMENT_DOT
0195 7E00            345                             MOV R6,#0
0197 22              346                             RET 
                     347     
0198                 348                     Segment_Numberdisplayer_3:
                     349                     ;segment 3
0198 BE0313          350                             CJNE R6,#3,Segment_Numberdisplayer_4
019B C2A0            351                             CLR SEGMENT_A
019D C2A1            352                             CLR SEGMENT_B
019F C2A2            353                             CLR SEGMENT_C
01A1 C2A3            354                             CLR SEGMENT_D
01A3 D2A4            355                             SETB SEGMENT_E
01A5 D2A5            356                             SETB SEGMENT_F
01A7 C2A6            357                             CLR SEGMENT_G
01A9 D2A7            358                             SETB SEGMENT_DOT
                     359     
01AB 7E00            360                             MOV R6,#0
01AD 22              361                             RET 
                     362     
01AE                 363                     Segment_Numberdisplayer_4:
                     364                     ;segment 4
01AE BE0413          365                             CJNE R6,#4,Segment_Numberdisplayer_5
01B1 D2A0            366                             SETB SEGMENT_A
01B3 C2A1            367                             CLR SEGMENT_B
01B5 C2A2            368                             CLR SEGMENT_C
01B7 D2A3            369                             SETB SEGMENT_D
01B9 D2A4            370                             SETB SEGMENT_E
01BB C2A5            371                             CLR SEGMENT_F
01BD C2A6            372                             CLR SEGMENT_G
01BF D2A7            373                             SETB SEGMENT_DOT
01C1 7E00            374                             MOV R6,#0
01C3 22              375                             RET 
                     376     
01C4                 377                     Segment_Numberdisplayer_5:
                     378                     ;segment 5
A51 MACRO ASSEMBLER  HW4_ASM_2                                                            12/19/2017 11:09:04 PAGE     7

01C4 BE0513          379                             CJNE R6,#5,Segment_Numberdisplayer_6
01C7 C2A0            380                             CLR SEGMENT_A
01C9 D2A1            381                             SETB SEGMENT_B
01CB C2A2            382                             CLR SEGMENT_C
01CD C2A3            383                             CLR SEGMENT_D
01CF D2A4            384                             SETB SEGMENT_E
01D1 C2A5            385                             CLR SEGMENT_F
01D3 C2A6            386                             CLR SEGMENT_G
01D5 D2A7            387                             SETB SEGMENT_DOT
01D7 7E00            388                             MOV R6,#0
01D9 22              389                             RET 
                     390     
01DA                 391                     Segment_Numberdisplayer_6:
                     392                     ;segment 6
01DA BE0613          393                             CJNE R6,#6,Segment_Numberdisplayer_7
01DD C2A0            394                             CLR SEGMENT_A
01DF D2A1            395                             SETB SEGMENT_B
01E1 C2A2            396                             CLR SEGMENT_C
01E3 C2A3            397                             CLR SEGMENT_D
01E5 C2A4            398                             CLR SEGMENT_E
01E7 C2A5            399                             CLR SEGMENT_F
01E9 C2A6            400                             CLR SEGMENT_G
01EB D2A7            401                             SETB SEGMENT_DOT
                     402     
01ED 7E00            403                             MOV R6,#0
01EF 22              404                             RET 
                     405     
01F0                 406                     Segment_Numberdisplayer_7:
                     407                     ;segment 7
01F0 BE0713          408                             CJNE R6,#7,Segment_Numberdisplayer_8
01F3 C2A0            409                             CLR SEGMENT_A
01F5 C2A1            410                             CLR SEGMENT_B
01F7 C2A2            411                             CLR SEGMENT_C
01F9 D2A3            412                             SETB SEGMENT_D
01FB D2A4            413                             SETB SEGMENT_E
01FD D2A5            414                             SETB SEGMENT_F
01FF D2A6            415                             SETB SEGMENT_G
0201 D2A7            416                             SETB SEGMENT_DOT
0203 7E00            417                             MOV R6,#0
0205 22              418                             RET 
                     419     
0206                 420                     Segment_Numberdisplayer_8:
                     421                     ;segment 8
0206 BE0813          422                             CJNE R6,#8,Segment_Numberdisplayer_9
0209 C2A0            423                             CLR SEGMENT_A
020B C2A1            424                             CLR SEGMENT_B
020D C2A2            425                             CLR SEGMENT_C
020F C2A3            426                             CLR SEGMENT_D
0211 C2A4            427                             CLR SEGMENT_E
0213 C2A5            428                             CLR SEGMENT_F
0215 C2A6            429                             CLR SEGMENT_G
0217 D2A7            430                             SETB SEGMENT_DOT
0219 7E00            431                             MOV R6,#0
021B 22              432                             RET 
                     433     
021C                 434                     Segment_Numberdisplayer_9:
                     435                     ;segment 9
021C C2A0            436                             CLR SEGMENT_A
021E C2A1            437                             CLR SEGMENT_B
0220 C2A2            438                             CLR SEGMENT_C
0222 C2A3            439                             CLR SEGMENT_D
0224 D2A4            440                             SETB SEGMENT_E
0226 C2A5            441                             CLR SEGMENT_F
0228 C2A6            442                             CLR SEGMENT_G
022A D2A7            443                             SETB SEGMENT_DOT
022C 7E00            444                             MOV R6,#0
A51 MACRO ASSEMBLER  HW4_ASM_2                                                            12/19/2017 11:09:04 PAGE     8

022E 22              445                             RET 
                     446     
                     447     END
A51 MACRO ASSEMBLER  HW4_ASM_2                                                            12/19/2017 11:09:04 PAGE     9

SYMBOL TABLE LISTING
------ ----- -------


N A M E                       T Y P E  V A L U E   ATTRIBUTES

DELAYTIME. . . . . . . . . .  N NUMB   0005H   A   
DELAY_TIME0. . . . . . . . .  C ADDR   00A1H   A   
DELAY_TIME0_WORKING. . . . .  C ADDR   00A3H   A   
DELAY_TIME1. . . . . . . . .  C ADDR   00ABH   A   
DELAY_TIME1_WORKING. . . . .  C ADDR   00ADH   A   
EA . . . . . . . . . . . . .  B ADDR   00A8H.7 A   
EX1. . . . . . . . . . . . .  B ADDR   00A8H.2 A   
INTERRUPT_EVENT. . . . . . .  C ADDR   004AH   A   
INTERRUPT_EVENT_LOOP . . . .  C ADDR   005EH   A   
IT1. . . . . . . . . . . . .  B ADDR   0088H.2 A   
P1 . . . . . . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . . . . . . .  D ADDR   00B0H   A   
RS0. . . . . . . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . . . . . . .  B ADDR   00D0H.4 A   
SEGMENT0_ENABLE. . . . . . .  B ADDR   0090H.3 A   
SEGMENT1_ENABLE. . . . . . .  B ADDR   0090H.2 A   
SEGMENT2_ENABLE. . . . . . .  B ADDR   0090H.1 A   
SEGMENT3_ENABLE. . . . . . .  B ADDR   0090H.0 A   
SEGMENT_A. . . . . . . . . .  B ADDR   00A0H.0 A   
SEGMENT_ADDER. . . . . . . .  C ADDR   00C5H   A   
SEGMENT_B. . . . . . . . . .  B ADDR   00A0H.1 A   
SEGMENT_C. . . . . . . . . .  B ADDR   00A0H.2 A   
SEGMENT_CARRY. . . . . . . .  C ADDR   00CEH   A   
SEGMENT_CARRY_COMPLETE . . .  C ADDR   00F2H   A   
SEGMENT_CARRY_R0TOR1 . . . .  C ADDR   00E5H   A   
SEGMENT_CARRY_R1TOR2 . . . .  C ADDR   00D8H   A   
SEGMENT_CARRY_R2TOR3 . . . .  C ADDR   00CEH   A   
SEGMENT_CHOOSER. . . . . . .  C ADDR   010CH   A   
SEGMENT_CHOOSER_0. . . . . .  C ADDR   010CH   A   
SEGMENT_CHOOSER_1. . . . . .  C ADDR   011AH   A   
SEGMENT_CHOOSER_2. . . . . .  C ADDR   0127H   A   
SEGMENT_CHOOSER_3. . . . . .  C ADDR   0134H   A   
SEGMENT_CLEAR. . . . . . . .  C ADDR   0102H   A   
SEGMENT_D. . . . . . . . . .  B ADDR   00A0H.3 A   
SEGMENT_DOT. . . . . . . . .  B ADDR   00A0H.7 A   
SEGMENT_E. . . . . . . . . .  B ADDR   00A0H.4 A   
SEGMENT_EXTINGUISH_INTERRUPT  C ADDR   006FH   A   
SEGMENT_F. . . . . . . . . .  B ADDR   00A0H.5 A   
SEGMENT_G. . . . . . . . . .  B ADDR   00A0H.6 A   
SEGMENT_LIGHT_INTERRUPT. . .  C ADDR   0064H   A   
SEGMENT_LOOP . . . . . . . .  C ADDR   0096H   A   
SEGMENT_NON_CARRY. . . . . .  C ADDR   00FAH   A   
SEGMENT_NUMBERDISPLAYER. . .  C ADDR   0156H   A   
SEGMENT_NUMBERDISPLAYER_0. .  C ADDR   0156H   A   
SEGMENT_NUMBERDISPLAYER_1. .  C ADDR   016CH   A   
SEGMENT_NUMBERDISPLAYER_2. .  C ADDR   0182H   A   
SEGMENT_NUMBERDISPLAYER_3. .  C ADDR   0198H   A   
SEGMENT_NUMBERDISPLAYER_4. .  C ADDR   01AEH   A   
SEGMENT_NUMBERDISPLAYER_5. .  C ADDR   01C4H   A   
SEGMENT_NUMBERDISPLAYER_6. .  C ADDR   01DAH   A   
SEGMENT_NUMBERDISPLAYER_7. .  C ADDR   01F0H   A   
SEGMENT_NUMBERDISPLAYER_8. .  C ADDR   0206H   A   
SEGMENT_NUMBERDISPLAYER_9. .  C ADDR   021CH   A   
SEGMENT_PRIVIOUS_CLEAR . . .  C ADDR   0147H   A   
SEGMENT_UPDATE . . . . . . .  C ADDR   010CH   A   
SETUP. . . . . . . . . . . .  C ADDR   0017H   A   
SP . . . . . . . . . . . . .  D ADDR   0081H   A   
SWITCH . . . . . . . . . . .  B ADDR   00B0H.3 A   
TF0. . . . . . . . . . . . .  B ADDR   0088H.5 A   
A51 MACRO ASSEMBLER  HW4_ASM_2                                                            12/19/2017 11:09:04 PAGE    10

TF1. . . . . . . . . . . . .  B ADDR   0088H.7 A   
TH0. . . . . . . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . . . . . . .  D ADDR   008DH   A   
TIME_CHECKER . . . . . . . .  C ADDR   00B5H   A   
TIME_NOT_UP. . . . . . . . .  C ADDR   00C4H   A   
TIME_UP. . . . . . . . . . .  C ADDR   00BAH   A   
TL0. . . . . . . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . . . . . . .  D ADDR   008BH   A   
TMOD . . . . . . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . . . . . . .  B ADDR   0088H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)

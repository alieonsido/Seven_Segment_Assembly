A51 MACRO ASSEMBLER  HW4_ASM_COMMONPOSITIVE                                               12/16/2017 18:20:07 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\HW4_ASM_commonpositive.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE HW4_ASM_commonpositive.asm SET(SMALL) DEBUG PRINT(.\Listings\HW4_ASM_co
                      mmonpositive.lst) OBJECT(.\Objects\HW4_ASM_commonpositive.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ; Spec 1: click SW13 and the segment_LED ++ with non-interrupt.
                       2     ; Sepc 2: click SW13 and the segment_LED ++ with external interrupt.
                       3     
                       4     ; the program is non-interrupt.
                       5     
                       6     ; non-interrupt:
                       7     
                       8     ; ----------------defination
                       9     
  00B3                10     SWITCH EQU P3.3
                      11     
  0093                12     SEGMENT0_ENABLE EQU P1.3 
  0092                13     SEGMENT1_ENABLE EQU P1.2
  0091                14     SEGMENT2_ENABLE EQU P1.1
  0090                15     SEGMENT3_ENABLE EQU P1.0
                      16     
  00A0                17     SEGMENT_A EQU P2.0
  00A1                18     SEGMENT_B EQU P2.1
  00A2                19     SEGMENT_C EQU P2.2
  00A3                20     SEGMENT_D EQU P2.3
  00A4                21     SEGMENT_E EQU P2.4
  00A5                22     SEGMENT_F EQU P2.5
  00A6                23     SEGMENT_G EQU P2.6
  00A7                24     SEGMENT_DOT EQU P2.7
                      25     
                      26     
                      27     ; ----------------defination
                      28     
                      29     ; Notes:
                      30             ; MOV P2,A let all of P2 be zero.
                      31             ; R0 R1 R2 R3 is used to be set "value".
                      32             ; R4 is FLAG for timer.
                      33             ; R5 is used to save the carry.
                      34             ; R6 is used to be displayer.
                      35             ; R7 is test register.
                      36     ; Notice:You need to stay alert on GPIO's speed, or you will find that the segment will be 
                             confusion.
                      37             ; Timer 0 is used to debounce
                      38             ; Timer 1 is used to lag Segment.
                      39     
                      40     ; Setup.
0000                  41     ORG 0000H
0000 E500             42     MOV A,00H 
0002 F5A0             43     MOV P2,A ;P2 = ""All"" of Port 2 
0004 F590             44     MOV P1,A
0006 0108             45     AJMP Setup
                      46     
0008                  47     Setup:
                      48             ;Number Initial
0008 7800             49             MOV R0,#0
000A 7900             50             MOV R1,#0
000C 7A00             51             MOV R2,#0
000E 7B00             52             MOV R3,#0
0010 7C01             53             MOV R4,#1 ;for Timer edge.
0012 7D00             54             MOV R5,#0
0014 7E00             55             MOV R6,#0
0016 7F00             56             MOV R7,#0
A51 MACRO ASSEMBLER  HW4_ASM_COMMONPOSITIVE                                               12/16/2017 18:20:07 PAGE     2

0018 75813F           57             MOV sp,#3FH
001B 758911           58             MOV tmod,#00010001b  ;setting timer0 and timer 1 in MODE 1, Total range is 16bit.(T
                             H+TL)
001E 85A08C           59             MOV TH0,00A0H  
0021 85008A           60             MOV TL0,00H 
                      61             
0024 85008D           62             MOV TH1,00H
0027 85018B           63             MOV TL1,01H
                      64     
                      65     
002A 12008E           66             LCALL Segment_Update
002D 8000             67             JMP Segment_Loop
                      68     
                      69     
                      70             
                      71     ; for scan every segment loop, and it's main code.
                      72     ; Segment_Chooser include displayer.
002F                  73     Segment_Loop:
002F 30B305           74             JNB SWITCH,Segment_Adder
0032 12008E           75             LCALL Segment_Update
                      76             ;JMP Segment_Adder
0035 80F8             77             JMP Segment_Loop
                      78             
                      79     
                      80     
                      81     
                      82     ; for the number of every segment.
0037                  83     Segment_Adder:
                      84             ;LCALL Delay_Time0
0037 7C00             85             MOV R4,#0
                      86     
0039                  87             debounce:
0039 BC0007           88                     CJNE R4,#0,debounce_complete
003C ACB3             89                     MOV R4,00B3H ;B3H is SWITCH address.
003E 80F9             90                     JMP debounce
0040 12007A           91                     LCALL Delay_Time0
                      92                     
                      93     
0043                  94             debounce_complete:
0043 1200C5           95             LCALL Segment_Privious_Clear
0046 120084           96             LCALL Delay_Time1
0049 E8               97             MOV A,R0
004A 04               98             INC A
004B F8               99             MOV R0,A
004C E4              100             CLR A
004D 120084          101             LCALL Delay_Time1
                     102     
0050 B80A25          103             CJNE R0,#0AH,Segment_Non_Carry ; because this is a add 1 circuit, we only need to c
                             are the LSB.
0053 8014            104             JMP Segment_Carry_R0toR1
                     105     
0055                 106             Segment_Carry:
0055                 107                     Segment_Carry_R2toR3:
0055 EB              108                             MOV A,R3
0056 04              109                             INC A
0057 FB              110                             MOV R3,A
0058 7A00            111                             MOV R2,#00H
005A 801A            112                             JMP Segment_Carry_Complete
                     113     
005C                 114                     Segment_Carry_R1toR2:
005C B90A0A          115                             CJNE R1,#0AH,Segment_Carry_R0toR1
005F EA              116                             MOV A,R2
0060 04              117                             INC A
0061 FA              118                             MOV R2,A
0062 7900            119                             MOV R1,#00H
0064 BA0A0F          120                             CJNE R2,#0AH,Segment_Carry_Complete
A51 MACRO ASSEMBLER  HW4_ASM_COMMONPOSITIVE                                               12/16/2017 18:20:07 PAGE     3

0067 80EC            121                             JMP Segment_Carry_R2toR3
                     122     
0069                 123                     Segment_Carry_R0toR1:
0069 B80A0A          124                             CJNE R0,#0AH,Segment_Carry_Complete
006C E9              125                             MOV A,R1
006D 04              126                             INC A
006E F9              127                             MOV R1,A
006F 7800            128                             MOV R0,#00H
0071 B90A02          129                             CJNE R1,#0AH,Segment_Carry_Complete
0074 80E6            130                             JMP Segment_Carry_R1toR2
                     131     
0076                 132                     Segment_Carry_Complete:
0076 80B7            133                             JMP Segment_Loop 
                     134     
0078                 135             Segment_Non_Carry:
0078 80B5            136                     JMP Segment_Loop 
                     137             ;Warning: you can't JMP to Segment_Numberdisplayer directly, or you won't ba able t
                             o back Segment_Adder.
                     138     
                     139     
007A                 140     Delay_Time0:
                     141             ;The test environment is 12MHZ,so that 1/12 * 12MHZ (this is for machine cycle) = 1
                             MHZ
                     142             ;and, 1/(1M) second =  1 micro second, every 1 micro second will add the Timer once.
                     143     
                     144             ; I want 30 micro second , so we must initial set range.
007A D28C            145             SETB TR0 ; set Timer 0 to use.
007C                 146             Delay_Time0_Working:
007C 308DFD          147                     JNB TF0,Delay_Time0_Working ; if the time is up, the Timer Flag(TF) will fr
                             om zero to one.
007F C28D            148                     CLR TF0;
0081 C28C            149                     CLR TR0;
0083 22              150                     RET
                     151     
0084                 152     Delay_Time1:
0084 D28E            153             SETB TR1 ; set Timer 1 to use.
0086                 154             Delay_Time1_Working:
0086 308FFD          155                     JNB TF1,Delay_Time1_Working ; if the time is up, the Timer Flag(TF) will fr
                             om zero to one.
0089 C28F            156                     CLR TF1;
008B C28E            157                     CLR TR1;
008D 22              158                     RET
                     159     
                     160     
008E                 161     Segment_Update:
                     162     
                     163             ; for choose the segment bit.
008E                 164             Segment_Chooser:
008E                 165                     Segment_Chooser_0:
008E C293            166                             CLR SEGMENT0_ENABLE ; the enable is low state trigger.
0090 D292            167                             SETB SEGMENT1_ENABLE
0092 D291            168                             SETB SEGMENT2_ENABLE
0094 D290            169                             SETB SEGMENT3_ENABLE
0096 8806            170                             MOV 06H,R0 ; for displayer's check.
0098 1200D4          171                             LCALL Segment_Numberdisplayer
                     172                             ;LCALL Delay_Time1
009B                 173                     Segment_Chooser_1:
009B D293            174                             SETB SEGMENT0_ENABLE ; 0 2 3
                     175                             ;LCALL Delay_Time0
009D 1200C5          176                             LCALL Segment_Privious_Clear ;you need to clean the previous SEGMEN
                             T or you will get the previous status.
00A0 C292            177                             CLR SEGMENT1_ENABLE 
00A2 8906            178                             MOV 06H,R1 ; for displayer's check.
00A4 1200D4          179                             LCALL Segment_Numberdisplayer
                     180                             ;LCALL Delay_Time1
00A7                 181                     Segment_Chooser_2:
A51 MACRO ASSEMBLER  HW4_ASM_COMMONPOSITIVE                                               12/16/2017 18:20:07 PAGE     4

00A7 D292            182                             SETB SEGMENT1_ENABLE ; 0 1 3
00A9 1200C5          183                             LCALL Segment_Privious_Clear
00AC C291            184                             CLR SEGMENT2_ENABLE
00AE 8A06            185                             MOV 06H,R2 ; for displayer's check.
                     186                             ;LCALL Delay_Time1
00B0 1200D4          187                             LCALL Segment_Numberdisplayer
                     188                             ;LCALL Delay_Time1
00B3                 189                     Segment_Chooser_3:
00B3 D291            190                             SETB SEGMENT2_ENABLE ; 0 1 2
                     191                             ;LCALL Delay_Time0
00B5 1200C5          192                             LCALL Segment_Privious_Clear
00B8 C290            193                             CLR SEGMENT3_ENABLE 
00BA 8B06            194                             MOV 06H,R3 ; for displayer's check.
00BC 1200D4          195                             LCALL Segment_Numberdisplayer 
                     196                             ;LCALL Delay_Time1
00BF D290            197                             SETB SEGMENT3_ENABLE ; It must be clear itself. 0 1 2 3
00C1 1200C5          198                             LCALL Segment_Privious_Clear
00C4 22              199                     RET ;pop the stack, and you can back the main code.
                     200     
00C5                 201             Segment_Privious_Clear:
00C5 D2A0            202                     SETB SEGMENT_A
00C7 D2A1            203                     SETB SEGMENT_B
00C9 D2A2            204                     SETB SEGMENT_C
00CB D2A3            205                     SETB SEGMENT_D
00CD D2A4            206                     SETB SEGMENT_E
00CF D2A5            207                     SETB SEGMENT_F
00D1 D2A6            208                     SETB SEGMENT_G
00D3 22              209                     RET
                     210                     
                     211             ; for number display and replace the position of Array.
00D4                 212             Segment_Numberdisplayer:
                     213     
00D4                 214                     Segment_Numberdisplayer_0:
                     215                     ;segment 0
00D4 BE0013          216                             CJNE R6,#0,Segment_Numberdisplayer_1
00D7 C2A0            217                             CLR SEGMENT_A
00D9 C2A1            218                             CLR SEGMENT_B
00DB C2A2            219                             CLR SEGMENT_C
00DD C2A3            220                             CLR SEGMENT_D
00DF C2A4            221                             CLR SEGMENT_E
00E1 C2A5            222                             CLR SEGMENT_F
00E3 D2A6            223                             SETB SEGMENT_G
00E5 D2A7            224                             SETB SEGMENT_DOT
00E7 7E00            225                             MOV R6,#0
00E9 22              226                             RET  ;when display complete, you need to back to choose next one wh
                             ich need to display. 
                     227                     
00EA                 228                     Segment_Numberdisplayer_1:
                     229                     ;segment 1
00EA BE0113          230                             CJNE R6,#1,Segment_Numberdisplayer_2
00ED C2A1            231                             CLR SEGMENT_B
00EF C2A2            232                             CLR SEGMENT_C
                     233     
00F1 D2A0            234                             SETB SEGMENT_A
00F3 D2A3            235                             SETB SEGMENT_D
00F5 D2A4            236                             SETB SEGMENT_E
00F7 D2A5            237                             SETB SEGMENT_F
00F9 D2A6            238                             SETB SEGMENT_G
00FB D2A7            239                             SETB SEGMENT_DOT
00FD 7E00            240                             MOV R6,#0
00FF 22              241                             RET 
                     242     
0100                 243                     Segment_Numberdisplayer_2:
                     244                     ;segment 2
0100 BE0213          245                             CJNE R6,#2,Segment_Numberdisplayer_3
0103 C2A0            246                             CLR SEGMENT_A
A51 MACRO ASSEMBLER  HW4_ASM_COMMONPOSITIVE                                               12/16/2017 18:20:07 PAGE     5

0105 C2A1            247                             CLR SEGMENT_B
0107 D2A2            248                             SETB SEGMENT_C
0109 C2A3            249                             CLR SEGMENT_D
010B C2A4            250                             CLR SEGMENT_E
010D D2A5            251                             SETB SEGMENT_F
010F C2A6            252                             CLR SEGMENT_G
0111 D2A7            253                             SETB SEGMENT_DOT
0113 7E00            254                             MOV R6,#0
0115 22              255                             RET 
                     256     
0116                 257                     Segment_Numberdisplayer_3:
                     258                     ;segment 3
0116 BE0313          259                             CJNE R6,#3,Segment_Numberdisplayer_4
0119 C2A0            260                             CLR SEGMENT_A
011B C2A1            261                             CLR SEGMENT_B
011D C2A2            262                             CLR SEGMENT_C
011F C2A3            263                             CLR SEGMENT_D
0121 D2A4            264                             SETB SEGMENT_E
0123 D2A5            265                             SETB SEGMENT_F
0125 C2A6            266                             CLR SEGMENT_G
0127 D2A7            267                             SETB SEGMENT_DOT
                     268     
0129 7E00            269                             MOV R6,#0
012B 22              270                             RET 
                     271     
012C                 272                     Segment_Numberdisplayer_4:
                     273                     ;segment 4
012C BE0413          274                             CJNE R6,#4,Segment_Numberdisplayer_5
012F D2A0            275                             SETB SEGMENT_A
0131 C2A1            276                             CLR SEGMENT_B
0133 C2A2            277                             CLR SEGMENT_C
0135 D2A3            278                             SETB SEGMENT_D
0137 D2A4            279                             SETB SEGMENT_E
0139 C2A5            280                             CLR SEGMENT_F
013B C2A6            281                             CLR SEGMENT_G
013D D2A7            282                             SETB SEGMENT_DOT
013F 7E00            283                             MOV R6,#0
0141 22              284                             RET 
                     285     
0142                 286                     Segment_Numberdisplayer_5:
                     287                     ;segment 5
0142 BE0513          288                             CJNE R6,#5,Segment_Numberdisplayer_6
0145 C2A0            289                             CLR SEGMENT_A
0147 D2A1            290                             SETB SEGMENT_B
0149 C2A2            291                             CLR SEGMENT_C
014B C2A3            292                             CLR SEGMENT_D
014D D2A4            293                             SETB SEGMENT_E
014F C2A5            294                             CLR SEGMENT_F
0151 C2A6            295                             CLR SEGMENT_G
0153 D2A7            296                             SETB SEGMENT_DOT
0155 7E00            297                             MOV R6,#0
0157 22              298                             RET 
                     299     
0158                 300                     Segment_Numberdisplayer_6:
                     301                     ;segment 6
0158 BE0613          302                             CJNE R6,#6,Segment_Numberdisplayer_7
015B C2A0            303                             CLR SEGMENT_A
015D D2A1            304                             SETB SEGMENT_B
015F C2A2            305                             CLR SEGMENT_C
0161 C2A3            306                             CLR SEGMENT_D
0163 C2A4            307                             CLR SEGMENT_E
0165 C2A5            308                             CLR SEGMENT_F
0167 C2A6            309                             CLR SEGMENT_G
0169 D2A7            310                             SETB SEGMENT_DOT
                     311     
016B 7E00            312                             MOV R6,#0
A51 MACRO ASSEMBLER  HW4_ASM_COMMONPOSITIVE                                               12/16/2017 18:20:07 PAGE     6

016D 22              313                             RET 
                     314     
016E                 315                     Segment_Numberdisplayer_7:
                     316                     ;segment 7
016E BE0713          317                             CJNE R6,#7,Segment_Numberdisplayer_8
0171 C2A0            318                             CLR SEGMENT_A
0173 C2A1            319                             CLR SEGMENT_B
0175 C2A2            320                             CLR SEGMENT_C
0177 D2A3            321                             SETB SEGMENT_D
0179 D2A4            322                             SETB SEGMENT_E
017B D2A5            323                             SETB SEGMENT_F
017D D2A6            324                             SETB SEGMENT_G
017F D2A7            325                             SETB SEGMENT_DOT
0181 7E00            326                             MOV R6,#0
0183 22              327                             RET 
                     328     
0184                 329                     Segment_Numberdisplayer_8:
                     330                     ;segment 8
0184 BE0813          331                             CJNE R6,#8,Segment_Numberdisplayer_9
0187 C2A0            332                             CLR SEGMENT_A
0189 C2A1            333                             CLR SEGMENT_B
018B C2A2            334                             CLR SEGMENT_C
018D C2A3            335                             CLR SEGMENT_D
018F C2A4            336                             CLR SEGMENT_E
0191 C2A5            337                             CLR SEGMENT_F
0193 C2A6            338                             CLR SEGMENT_G
0195 D2A7            339                             SETB SEGMENT_DOT
0197 7E00            340                             MOV R6,#0
0199 22              341                             RET 
                     342     
019A                 343                     Segment_Numberdisplayer_9:
                     344                     ;segment 9
019A C2A0            345                             CLR SEGMENT_A
019C C2A1            346                             CLR SEGMENT_B
019E C2A2            347                             CLR SEGMENT_C
01A0 C2A3            348                             CLR SEGMENT_D
01A2 D2A4            349                             SETB SEGMENT_E
01A4 C2A5            350                             CLR SEGMENT_F
01A6 C2A6            351                             CLR SEGMENT_G
01A8 D2A7            352                             SETB SEGMENT_DOT
01AA 7E00            353                             MOV R6,#0
01AC 22              354                             RET 
                     355     
                     356     END
A51 MACRO ASSEMBLER  HW4_ASM_COMMONPOSITIVE                                               12/16/2017 18:20:07 PAGE     7

SYMBOL TABLE LISTING
------ ----- -------


N A M E                    T Y P E  V A L U E   ATTRIBUTES

DEBOUNCE. . . . . . . . .  C ADDR   0039H   A   
DEBOUNCE_COMPLETE . . . .  C ADDR   0043H   A   
DELAY_TIME0 . . . . . . .  C ADDR   007AH   A   
DELAY_TIME0_WORKING . . .  C ADDR   007CH   A   
DELAY_TIME1 . . . . . . .  C ADDR   0084H   A   
DELAY_TIME1_WORKING . . .  C ADDR   0086H   A   
P1. . . . . . . . . . . .  D ADDR   0090H   A   
P2. . . . . . . . . . . .  D ADDR   00A0H   A   
P3. . . . . . . . . . . .  D ADDR   00B0H   A   
SEGMENT0_ENABLE . . . . .  B ADDR   0090H.3 A   
SEGMENT1_ENABLE . . . . .  B ADDR   0090H.2 A   
SEGMENT2_ENABLE . . . . .  B ADDR   0090H.1 A   
SEGMENT3_ENABLE . . . . .  B ADDR   0090H.0 A   
SEGMENT_A . . . . . . . .  B ADDR   00A0H.0 A   
SEGMENT_ADDER . . . . . .  C ADDR   0037H   A   
SEGMENT_B . . . . . . . .  B ADDR   00A0H.1 A   
SEGMENT_C . . . . . . . .  B ADDR   00A0H.2 A   
SEGMENT_CARRY . . . . . .  C ADDR   0055H   A   
SEGMENT_CARRY_COMPLETE. .  C ADDR   0076H   A   
SEGMENT_CARRY_R0TOR1. . .  C ADDR   0069H   A   
SEGMENT_CARRY_R1TOR2. . .  C ADDR   005CH   A   
SEGMENT_CARRY_R2TOR3. . .  C ADDR   0055H   A   
SEGMENT_CHOOSER . . . . .  C ADDR   008EH   A   
SEGMENT_CHOOSER_0 . . . .  C ADDR   008EH   A   
SEGMENT_CHOOSER_1 . . . .  C ADDR   009BH   A   
SEGMENT_CHOOSER_2 . . . .  C ADDR   00A7H   A   
SEGMENT_CHOOSER_3 . . . .  C ADDR   00B3H   A   
SEGMENT_D . . . . . . . .  B ADDR   00A0H.3 A   
SEGMENT_DOT . . . . . . .  B ADDR   00A0H.7 A   
SEGMENT_E . . . . . . . .  B ADDR   00A0H.4 A   
SEGMENT_F . . . . . . . .  B ADDR   00A0H.5 A   
SEGMENT_G . . . . . . . .  B ADDR   00A0H.6 A   
SEGMENT_LOOP. . . . . . .  C ADDR   002FH   A   
SEGMENT_NON_CARRY . . . .  C ADDR   0078H   A   
SEGMENT_NUMBERDISPLAYER .  C ADDR   00D4H   A   
SEGMENT_NUMBERDISPLAYER_0  C ADDR   00D4H   A   
SEGMENT_NUMBERDISPLAYER_1  C ADDR   00EAH   A   
SEGMENT_NUMBERDISPLAYER_2  C ADDR   0100H   A   
SEGMENT_NUMBERDISPLAYER_3  C ADDR   0116H   A   
SEGMENT_NUMBERDISPLAYER_4  C ADDR   012CH   A   
SEGMENT_NUMBERDISPLAYER_5  C ADDR   0142H   A   
SEGMENT_NUMBERDISPLAYER_6  C ADDR   0158H   A   
SEGMENT_NUMBERDISPLAYER_7  C ADDR   016EH   A   
SEGMENT_NUMBERDISPLAYER_8  C ADDR   0184H   A   
SEGMENT_NUMBERDISPLAYER_9  C ADDR   019AH   A   
SEGMENT_PRIVIOUS_CLEAR. .  C ADDR   00C5H   A   
SEGMENT_UPDATE. . . . . .  C ADDR   008EH   A   
SETUP . . . . . . . . . .  C ADDR   0008H   A   
SP. . . . . . . . . . . .  D ADDR   0081H   A   
SWITCH. . . . . . . . . .  B ADDR   00B0H.3 A   
TF0 . . . . . . . . . . .  B ADDR   0088H.5 A   
TF1 . . . . . . . . . . .  B ADDR   0088H.7 A   
TH0 . . . . . . . . . . .  D ADDR   008CH   A   
TH1 . . . . . . . . . . .  D ADDR   008DH   A   
TL0 . . . . . . . . . . .  D ADDR   008AH   A   
TL1 . . . . . . . . . . .  D ADDR   008BH   A   
TMOD. . . . . . . . . . .  D ADDR   0089H   A   
TR0 . . . . . . . . . . .  B ADDR   0088H.4 A   
TR1 . . . . . . . . . . .  B ADDR   0088H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
